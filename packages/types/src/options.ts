import { Breadcrumb, BreadcrumbHint } from './breadcrumb';
import { Event } from './event';
import { Integration } from './integration';
import { StackLineParser, StackParser } from './stacktrace';

export interface ClientOptions {

  /**
   * 规定sdk是否可以发送事件到事件中心，默认是tru
   */
  enabled?: boolean;

  /**
   * 是否发送SDK用户报告，默认是发送
   */
  sendClientReports?: boolean;

  /** 应用当前的环境 **/
  environment?: string;

  /**
   * sdk初始化的时候的插件列表
   */
  integrations: Integration[];

  /**
   * stack解析器的实现
   * 默认情况下，一个stack解析器是会服务于所有支持的平台
   */
  stackParser: StackParser;

  /**
   * 数据采样率
   *
   */
  tracesSampleRate?: number;

  /**
   * 面包屑的最大值，默认是100
   * 如果一个事件上面包含的信息超过了1MB这个最大的负载量，那么这个事件会被挂起而不会被发送到事件管理中心
   */
  maxBreadcrumbs?: number;

  /**
   * 
   * A global sample rate to apply to all events.
   *
   * 0.0 = 0% chance of a given event being sent (send no events) 1.0 = 100% chance of a given event being sent (send
   * all events)
   */
  sampleRate?: number;

  /**
   * A callback invoked during event submission, allowing to optionally modify
   * the event before it is sent to Sentry.
   *
   * Note that you must return a valid event from this callback. If you do not
   * wish to modify the event, simply return it at the end.
   * Returning null will cause the event to be dropped.
   *
   * @param event The error or message event generated by the SDK.
   * @param hint May contain additional information about the original exception.
   * @returns A new event that will be sent | null.
   */
  beforeSend?: (event: Event) => PromiseLike<Event | null> | Event | null;

  /**
   * A callback invoked when adding a breadcrumb, allowing to optionally modify
   * it before adding it to future events.
   *
   * Note that you must return a valid breadcrumb from this callback. If you do
   * not wish to modify the breadcrumb, simply return it at the end.
   * Returning null will cause the breadcrumb to be dropped.
   *
   * @param breadcrumb The breadcrumb as created by the SDK.
   * @returns The breadcrumb that will be added | null.
   */
  beforeBreadcrumb?: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => Breadcrumb | null;
}

/** 所有SDK的基本配置 */
export interface Options
  extends Omit<Partial<ClientOptions>, 'integrations' | 'transport' | 'stackParser'> {
  /**
   * If this is set to false, default integrations will not be added, otherwise this will internally be set to the
   * recommended default integrations.
   */
  defaultIntegrations?: false | Integration[];

  /**
   * List of integrations that should be installed after SDK was initialized.
   * Accepts either a list of integrations or a function that receives
   * default integrations and returns a new, updated list.
   */
  integrations?: Integration[] | ((integrations: Integration[]) => Integration[]);

  /**
   * A stack parser implementation or an array of stack line parsers
   * By default, a stack parser is supplied for all supported browsers
   */
  stackParser?: StackParser | StackLineParser[];
}
